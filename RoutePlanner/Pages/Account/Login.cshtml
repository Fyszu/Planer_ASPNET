@page "/Login"
@model RoutePlanner.Pages.Account.LoginModel
@{
    ViewData["Title"] = "Panel logowania";
    Layout = "_Layout";
}

<!DOCTYPE html>
<html lang="en" >
<head>
  <meta charset="UTF-8">
  <link rel="stylesheet" href="~/css/LoginPage.css">

</head>
<body>
<!-- partial:index.partial.html -->
    <div class="login-page">
      <div class="form vertical-center">
        <form class="register-form" method="post" asp-page-handler="Register">
          <div class="form-group">
                    <span asp-validation-for="InputRegister.EmailRegister" class="text-danger"></span>
                    <label asp-for="InputRegister.EmailRegister"></label>
                    <input class="input-field" asp-for="InputRegister.EmailRegister" class="form-control" />
                </div>
                <div class="form-group">
                    <span asp-validation-for="InputRegister.PasswordRegister" class="text-danger"></span>
                    <label asp-for="InputRegister.PasswordRegister"></label>
                    <input class="input-field" asp-for="InputRegister.PasswordRegister" class="form-control" />
                </div>
                <div class="form-group">
                    <span asp-validation-for="InputRegister.ConfirmPasswordRegister" class="text-danger"></span>
                    <label asp-for="InputRegister.ConfirmPasswordRegister"></label>
                    <input class="input-field" asp-for="InputRegister.ConfirmPasswordRegister" class="form-control" />
                </div>
          <button type = "submit" class="btn btn-success form-control">Zarejestruj</button>
          <div class="form-group">
                    @if(Model.ModelState.ErrorCount > 0)
                    {
                        var modelStateDictionary = ModelState.Where(key => key.Key.Equals("Register")).ToList();
                        if (modelStateDictionary != null)
                        {
                            foreach (var keyValuePair in modelStateDictionary)
                            {
                                var errors = keyValuePair.Value?.Errors;
                                if (errors != null) {
                                    foreach (var error in errors)
                                    {
                                        <br><label class="text-danger">@error.ErrorMessage</label>
                                    }
                                }
                            }
                        }
                    }
                </div>
          <p class="message">Posiadasz już konto? <a href="#">Zaloguj</a></p>
        </form>
        <form class="login-form" method="post" asp-page-handler="Login">
            <div class="form-group">
                <span asp-validation-for="InputLogin.EmailLogin" class="text-danger"></span>
                <label asp-for="InputLogin.EmailLogin"></label>
                <input class="input-field" asp-for="InputLogin.EmailLogin" class="form-control" />
            </div>
            <div class="form-group">
                <span asp-validation-for="InputLogin.PasswordLogin" class="text-danger"></span>
                <label asp-for="InputLogin.PasswordLogin"></label>
                <input class="input-field" asp-for="InputLogin.PasswordLogin" class="form-control" />
            </div>
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="checkbox" asp-for="InputLogin.RememberMe" id="rememberMe"/>
                <label class="form-check-label"for="rememberMe">Zapamiętaj mnie</label>
            </div>
            <div class="form-group">
                <button type="submit" class="btn btn-primary">Zaloguj</button>
            </div>
            <div class="form-group">
                    @if(Model.ModelState.ErrorCount > 0)
                    {
                        var modelStateDictionary = ModelState.Where(key => key.Key.Equals("Login")).ToList();
                        if (modelStateDictionary != null)
                        {
                            foreach (var keyValuePair in modelStateDictionary)
                            {
                                var errors = keyValuePair.Value?.Errors;
                                if (errors != null) {
                                    foreach (var error in errors)
                                    {
                                        <br><label class="text-danger">@error.ErrorMessage</label>
                                    }
                                }
                            }
                        }
                    }
                </div>
          <p class="message">Nie masz jeszcze konta? <a href="#">Zarejestruj</a></p>
        </form>
      </div>
    </div>

    <!-- partial -->
    <script src='https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js'></script>
    <script>
        @if (Model.IsReturnFromRegisterPost)
        {
            @:$('form').animate({ height: "toggle", opacity: "toggle" }, "fast");
        }
        $('.message a').click(function () {
            $('form').animate({ height: "toggle", opacity: "toggle" }, "slow");
        });
    </script>
    @section Scripts {  
        <partial name="_ValidationScriptsPartial" />  
    } 

</body>
</html>
